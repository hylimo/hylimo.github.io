import{_ as t,c as e,o as a,ay as r}from"./chunks/framework.CDajJPzx.js";const m=JSON.parse('{"title":"Hybrid Editor","description":"","frontmatter":{},"headers":[],"relativePath":"docs/editor.md","filePath":"docs/editor.md"}'),l={name:"docs/editor.md"};function o(n,i,d,s,h,c){return a(),e("div",null,[...i[0]||(i[0]=[r('<h1 id="hybrid-editor" tabindex="-1">Hybrid Editor <a class="header-anchor" href="#hybrid-editor" aria-label="Permalink to “Hybrid Editor”">​</a></h1><p>The hybrid editor is the main interface for creating and editing diagrams. Its user interface is split into two areas: textual editor, and graphical editor. General features of the web-based editor include</p><ul><li>Automatic saving of diagrams to the browser&#39;s local storage</li><li>Download diagrams using Ctrl + S or the download button</li><li>Download rendered diagrams as SVG or PDF using the download button</li><li>Switch between a dark and light theme</li></ul><h2 id="textual-editor" tabindex="-1">Textual Editor <a class="header-anchor" href="#textual-editor" aria-label="Permalink to “Textual Editor”">​</a></h2><p>The textual editor allows to edit the diagram in a textual way. As diagrams are stored in a textual format, this is the most direct way to edit them. It provides the following features:</p><ul><li>Syntax highlighting</li><li>Auto-completion, including documentation</li><li>Error highlighting</li><li>Auto-formatting</li></ul><p>In the textual editor, one uses the diagram DSL which is embedded in the programming language SyncScript.</p><h2 id="graphical-editor" tabindex="-1">Graphical Editor <a class="header-anchor" href="#graphical-editor" aria-label="Permalink to “Graphical Editor”">​</a></h2><p>The graphical editor displays the diagram, allows to navigate and manipulate it. It is live-synced with the textual editor. It provides the following features:</p><ul><li>Zooming and panning the canvas</li><li>Revealing the textual definition by double click / alt + click on a diagram element</li><li>Multi-selection of elements using ctrl + click</li><li>Moving elements and points using drag and drop</li><li>Resizing diagram elements by dragging its border</li><li>Rotating diagram elements by dragging the rotate symbol</li><li>Splitting canvas connections by inserting a new point by shift + click on a canvas connection</li></ul>',10)])])}const u=t(l,[["render",o]]);export{m as __pageData,u as default};
